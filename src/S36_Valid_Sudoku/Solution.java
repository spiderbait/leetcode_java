package S36_Valid_Sudoku;

public class Solution {
    public boolean isValidSudoku(char[][] board) {

    }

    public boolean isValidColumn(char[] columns) {

    }

    public boolean isValidRow(char[] rows) {

    }

    public boolean isValidCell(char[] cell) {

    }

    public static void main(String[] args) {
       char[][] board1 = {{'5','3','.','.','7','.','.','.','.'}
               ,{'6','.','.','1','9','5','.','.','.'}
               ,{'.','9','8','.','.','.','.','6','.'}
               ,{'8','.','.','.','6','.','.','.','3'}
               ,{'4','.','.','8','.','3','.','.','1'}
               ,{'7','.','.','.','2','.','.','.','6'}
               ,{'.','6','.','.','.','.','2','8','.'}
               ,{'.','.','.','4','1','9','.','.','5'}
               ,{'.','.','.','.','8','.','.','7','9'}};

       char[][] board2 = {{'8','3','.','.','7','.','.','.','.'}
               ,{'6','.','.','1','9','5','.','.','.'}
               ,{'.','9','8','.','.','.','.','6','.'}
               ,{'8','.','.','.','6','.','.','.','3'}
               ,{'4','.','.','8','.','3','.','.','1'}
               ,{'7','.','.','.','2','.','.','.','6'}
               ,{'.','6','.','.','.','.','2','8','.'}
               ,{'.','.','.','4','1','9','.','.','5'}
               ,{'.','.','.','.','8','.','.','7','9'}};
    }
}
